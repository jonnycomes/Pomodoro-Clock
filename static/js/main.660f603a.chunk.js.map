{"version":3,"sources":["modules/action.js","pages/timer.js","pages/session.js","pages/break.js","modules/reducer.js","App.js","modules/store.js","serviceWorker.js","index.js"],"names":["Types","DECREMENT_SECONDS","DECREMENT_MINUTES","SESSION_BREAK_SWITCH","DECREMENT_SESSION","INCREMENT_SESSION","DECREMENT_BREAK","INCREMENT_BREAK","PLAY_PAUSE","RESET","modules_action","type","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClock","bind","assertThisInitialized","handleReset","resetAll","x","document","getElementById","pause","currentTime","volume","play","paused","secondsLeft","minutesLeft","playBeep","decrementSeconds","sessionBreakSwitch","decrementMinutes","intervalID","setInterval","clearInterval","number","inSession","react_default","a","createElement","className","id","showSessionBreak","showDigits","onClick","playPause","showPlayPaused","src","Component","connect","state","dispatch","ACTIONS","Session","sessionLength","decrementSession","incrementSession","Break","breakLength","decrementBreak","incrementBreak","defaultState","calculatorReducer","arguments","length","undefined","action","console","log","Math","max","min","initialState","reduxStore","window","REDUX_INITIAL_DATA","createStore","applyMiddleware","logger","App","es","store","session","pages_break","timer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.660f603a.chunk.js","sourcesContent":["// types of action\nconst Types = {\n  DECREMENT_SECONDS: \"DECREMENT_SECONDS\",\n  DECREMENT_MINUTES: \"DECREMENT_MINUTES\",\n  SESSION_BREAK_SWITCH: \"SESSION_BREAK_SWITCH\",\n  DECREMENT_SESSION: \"DECREMENT_SESSION\",\n  INCREMENT_SESSION: \"INCREMENT_SESSION\",\n  DECREMENT_BREAK: \"DECREMENT_BREAK\",\n  INCREMENT_BREAK: \"INCREMENT_BREAK\",\n  PLAY_PAUSE: \"PLAY_PAUSE\",\n  RESET: \"RESET\"\n  \n};\n// actions \nconst decrementSeconds = () => ({\n  type: Types.DECREMENT_SECONDS\n});\nconst decrementMinutes = () => ({\n  type: Types.DECREMENT_MINUTES\n});\nconst sessionBreakSwitch = () => ({\n  type: Types.SESSION_BREAK_SWITCH\n});\nconst decrementSession = () => ({\n  type: Types.DECREMENT_SESSION\n});\nconst incrementSession = () => ({\n  type: Types.INCREMENT_SESSION\n});\nconst decrementBreak = () => ({\n  type: Types.DECREMENT_BREAK\n});\nconst incrementBreak = () => ({\n  type: Types.INCREMENT_BREAK\n});\nconst playPause = () => ({\n  type: Types.PLAY_PAUSE\n});\nconst resetAll = () => ({\n  type: Types.RESET\n});\nexport default {\n  decrementSeconds,\n  decrementMinutes,\n  sessionBreakSwitch,\n  decrementSession,\n  incrementSession,\n  decrementBreak,\n  incrementBreak,\n  playPause,\n  resetAll,\n  Types\n};","import React, { Component } from \"react\";\nimport ACTIONS from \"../modules/action\";\nimport { connect } from \"react-redux\";\n\nclass Timer extends Component {\n  constructor(props){\n    super(props);\n    this.handleClock = this.handleClock.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleReset() {\n    this.props.resetAll();\n    let x = document.getElementById('beep');\n    x.pause();\n    x.currentTime = 0;\n  }\n\n  playBeep() {\n    let x = document.getElementById('beep');\n    x.volume = 0.03;\n    x.play();\n  }\n\n  handleClock() {\n    if(!this.props.paused) {\n      if(this.props.secondsLeft === 1 && this.props.minutesLeft === 0) {\n        this.playBeep();\n        this.props.decrementSeconds();\n      } else if(this.props.secondsLeft === 0 && this.props.minutesLeft === 0) {\n        this.props.sessionBreakSwitch();\n      } else if(this.props.secondsLeft === 0) {\n        this.props.decrementMinutes();\n      } else {\n        this.props.decrementSeconds();\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(this.handleClock,1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  showDigits(number) {\n    if(number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  showSessionBreak() {\n    if(this.props.inSession) {\n      return 'Session';\n    }\n    return 'Break';\n  }\n\n  showPlayPaused() {\n    if(this.props.paused) {\n      return <i className='fa fa-play fa-3x'></i>;\n    }\n    return <i className='fa fa-pause fa-3x'></i>;\n  }\n\n  render() {\n    return (\n      <div id='timer-container' className='container'>\n        <h2 id='timer-label'>{this.showSessionBreak()}</h2>\n        <div id='time-left'>{this.showDigits(this.props.minutesLeft)}:{this.showDigits(this.props.secondsLeft)}</div>\n        <div id='button-container'>\n          <button id='start_stop' onClick={this.props.playPause}>{this.showPlayPaused()}</button>\n          <button id='reset' onClick={this.handleReset}><i className='fa fa-sync fa-3x'></i></button>\n        </div>\n        <audio src='/Pomodoro-Clock/audio/pager.mp3' id='beep'>\n          Your browser does not support audio.\n        </audio>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  minutesLeft: state.minutesLeft,\n  secondsLeft: state.secondsLeft,\n  inSession: state.inSession,\n  paused: state.paused\n});\nconst mapDispatchToProps = dispatch => ({\n  decrementSeconds: () => dispatch(ACTIONS.decrementSeconds()),\n  decrementMinutes: () => dispatch(ACTIONS.decrementMinutes()),\n  sessionBreakSwitch: () => dispatch(ACTIONS.sessionBreakSwitch()),\n  resetAll: () => dispatch(ACTIONS.resetAll()),\n  playPause: () => dispatch(ACTIONS.playPause())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Timer);","import React, { Component } from \"react\";\nimport ACTIONS from \"../modules/action\";\nimport { connect } from \"react-redux\";\n\nclass Session extends Component {\n\n  render() {\n    return (\n      <div id='session-container' className='container'>\n        <h2 id='session-label'>Session Length</h2>\n        <div id='session-length' className='length'>{this.props.sessionLength}</div>\n        <button id='session-decrement' onClick={this.props.decrementSession}><i className='fa fa-minus fa-2x'></i></button>\n        <button id='session-increment' onClick={this.props.incrementSession}><i className='fa fa-plus fa-2x'></i></button>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  sessionLength: state.sessionLength\n});\nconst mapDispatchToProps = dispatch => ({\n  decrementSession: () => dispatch(ACTIONS.decrementSession()),\n  incrementSession: () => dispatch(ACTIONS.incrementSession())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Session);","import React, { Component } from \"react\";\nimport ACTIONS from \"../modules/action\";\nimport { connect } from \"react-redux\";\n\nclass Break extends Component {\n\n  render() {\n    return (\n      <div id='break-container' className='container'>\n        <h2 id='break-label'>Break Length</h2>\n        <div id='break-length' className='length'>{this.props.breakLength}</div>\n        <button id='break-decrement' onClick={this.props.decrementBreak}><i className='fa fa-minus fa-2x'></i></button>\n        <button id='break-increment' onClick={this.props.incrementBreak}><i className='fa fa-plus fa-2x'></i></button>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  breakLength: state.breakLength\n});\nconst mapDispatchToProps = dispatch => ({\n  decrementBreak: () => dispatch(ACTIONS.decrementBreak()),\n  incrementBreak: () => dispatch(ACTIONS.incrementBreak())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Break);","import ACTIONS from \"./action\";\nconst defaultState = {\n  sessionLength: 25,\n  breakLength: 5,\n  minutesLeft: 25,\n  secondsLeft: 0,\n  inSession: true,\n  paused: true\n};\nconst calculatorReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.Types.DECREMENT_SECONDS: {\n      console.log(action);\n      return { \n        sessionLength: state.sessionLength,\n        breakLength: state.breakLength,\n        minutesLeft: state.minutesLeft,\n        secondsLeft: state.secondsLeft - 1,\n        inSession: state.inSession,\n        paused: state.paused\n      };\n    }\n    case ACTIONS.Types.DECREMENT_MINUTES: {\n      console.log(action);\n      return { \n        sessionLength: state.sessionLength,\n        breakLength: state.breakLength,\n        minutesLeft: state.minutesLeft - 1,\n        secondsLeft: 59,\n        inSession: state.inSession,\n        paused: state.paused\n      };\n    }\n    case ACTIONS.Types.SESSION_BREAK_SWITCH: {\n      console.log(action);\n      return { \n        sessionLength: state.sessionLength,\n        breakLength: state.breakLength,\n        minutesLeft: state.inSession ? state.breakLength : state.sessionLength,\n        secondsLeft: 0,\n        inSession: !state.inSession,\n        paused: state.paused\n      };\n    }\n    case ACTIONS.Types.DECREMENT_SESSION: {\n      console.log(action);\n      return { \n        sessionLength: Math.max(state.sessionLength - 1, 1),\n        breakLength: state.breakLength,\n        minutesLeft: Math.max(state.sessionLength - 1, 1),\n        secondsLeft: 0,\n        inSession: true,\n        paused: true\n      };\n    }\n    case ACTIONS.Types.INCREMENT_SESSION: {\n      console.log(action);\n      return { \n        sessionLength: Math.min(state.sessionLength + 1, 60),\n        breakLength: state.breakLength,\n        minutesLeft: Math.min(state.sessionLength + 1, 60),\n        secondsLeft: 0,\n        inSession: true,\n        paused: true\n      };\n    }\n    case ACTIONS.Types.DECREMENT_BREAK: {\n      console.log(action);\n      return { \n        sessionLength: state.sessionLength,\n        breakLength: Math.max(state.breakLength - 1, 1),\n        minutesLeft: state.sessionLength,\n        secondsLeft: 0,\n        inSession: true,\n        paused: true\n      };\n    }\n    case ACTIONS.Types.INCREMENT_BREAK: {\n      console.log(action);\n      return { \n        sessionLength: state.sessionLength,\n        breakLength: Math.min(state.breakLength + 1, 60),\n        minutesLeft: state.sessionLength,\n        secondsLeft: 0,\n        inSession: true,\n        paused: true\n      };\n    }\n    case ACTIONS.Types.PLAY_PAUSE: {\n      console.log(action);\n      return { \n        sessionLength: state.sessionLength,\n        breakLength: state.breakLength,\n        minutesLeft: state.minutesLeft,\n        secondsLeft: state.secondsLeft,\n        inSession: state.inSession,\n        paused: !state.paused\n      };\n    }\n    case ACTIONS.Types.RESET: {\n      console.log(action);\n      return defaultState;\n    }\n    default:\n      return state;\n  }\n};\nexport default calculatorReducer;","\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Timer from \"./pages/timer\";\nimport Session from \"./pages/session\";\nimport Break from \"./pages/break\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./modules/store\";\nconst reduxStore = configureStore(window.REDUX_INITIAL_DATA);\nclass App extends Component {\n  render() {\n    return (\n      <ReduxProvider store={reduxStore}>\n          <div id='pomodoro'>\n            <h1 id='pomodoro-heading'>Pomodoro Clock</h1>\n            <Session />\n            <Break />\n            <Timer />\n          </div>\n      </ReduxProvider>\n    );\n  }\n}\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\n// Logger with default options\nimport logger from \"redux-logger\";\nimport calculatorReducer from \"./reducer\";\nexport default function configureStore(initialState) {\n  const store = createStore(calculatorReducer, initialState, applyMiddleware(logger));\n  return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}